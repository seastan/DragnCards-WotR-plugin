{
    "automation": {
        "postNewGameActionList": [
            ["SET", "/automationEnabled", false],
            ["SET", "/currentPlayer", "player1"]
        ],
        "gameRules": {
            "currentPlayer": { 
                "_comment": "Track current player",
                "type": "trigger", 
                "listenTo": ["/currentPlayer"],
                "condition": ["TRUE"],
                "then": ["HIGHLIGHT_CURRENT_PLAYER"]
            },
            "handSize": { 
                "_comment": "Track hand size",
                "type": "trigger", 
                "listenTo": ["/groupById/player1Hand/stackIds", "/groupById/player2Hand/stackIds", "/groupById/player3Hand/stackIds", "/groupById/player4Hand/stackIds", "/groupById/player5Hand/stackIds", "/groupById/player6Hand/stackIds"],
                "condition": ["TRUE"],
                "then": [
                    ["SET_HAND_SIZE", "$TARGET.onCardEnter.controller"]
                ]
            },
            "victoryPoints": { 
                "_comment": "Track victory points",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId", "/cardById/*/tokens/*"
                ],
                "condition": ["OR",
                    ["IN_STRING", "$TARGET.groupId", "sharedScoring"],
                    ["PREV", ["IN_STRING", "$TARGET.groupId", "sharedScoring"]]
                ],
                "then": ["COMPUTE_SCORE"]
            },
            "corruption": {
                "_comment": "Track corruption",
                "type": "trigger",
                "listenTo": ["/corruptionScore"],
                "condition": ["NOT_EQUAL",
                    "$GAME.corruptionScore",
                    ["PREV", "$GAME.corruptionScore"]
                ],
                "then": ["COMPUTE_SCORE"]
            },
            "scoreUpdate": { 
                "_comment": "Update score when corruption counter changes value",
                "type": "trigger", 
                "listenTo": [
                    "/corruptionScore"
                ],
                "condition": ["TRUE"],
                "then": [
                    ["COMPUTE_SCORE"],
                    ["UPDATE_EXPECTED_POINTS"]
                ]
            },
            "cardEntersCombat": { 
                "_comment": "Card enters combat",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId", "/cardById/*/tokens/*"
                ],
                "condition": ["OR",
                    ["IN_STRING", "$TARGET.groupId", "sharedActiveRed"],
                    ["IN_STRING", "$TARGET.groupId", "sharedActiveBlue"]
                ],
                "then": ["COMPUTE_STRENGTH", "$TARGET.groupId"]
            },
            "cardLeavesCombat": { 
                "_comment": "Card leaves combat",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId"
                ],
                "condition": ["OR",
                    ["PREV", ["IN_STRING", "$TARGET.groupId", "sharedActiveRed"]],
                    ["PREV", ["IN_STRING", "$TARGET.groupId", "sharedActiveBlue"]]
                ],
                "then": ["COMPUTE_STRENGTH", ["PREV", "$TARGET.groupId"]]
            },
            "locationEnters": { 
                "_comment": "Location enters play",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId", "/cardById/*/tokens/*"
                ],
                "condition": ["OR",
                    ["IN_STRING", "$TARGET.groupId", "sharedActiveLocation"],
                    ["IN_STRING", "$TARGET.groupId", "sharedActiveLocation"]
                ],
                "then": [
                    ["VAR", "$LOC_GROUP_ID", "$TARGET.groupId"],
                    ["VAR", "$LOC_GROUP", "$GAME.groupById.$LOC_GROUP_ID"],
                    ["COMPUTE_STRENGTH", "$LOC_GROUP.activeRedGroupId"],
                    ["COMPUTE_STRENGTH", "$LOC_GROUP.activeBlueGroupId"]
                ]
            },
            "locationLeaves": { 
                "_comment": "Location leaves play",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId", "/cardById/*/tokens/*"
                ],
                "condition": ["OR",
                    ["PREV", ["IN_STRING", "$TARGET.groupId", "sharedActiveLocation"]],
                    ["PREV", ["IN_STRING", "$TARGET.groupId", "sharedActiveLocation"]]
                ],
                "then": [
                    ["VAR", "$LOC_GROUP_ID", ["PREV", "$TARGET.groupId"]],
                    ["VAR", "$LOC_GROUP", "$GAME.groupById.$LOC_GROUP_ID"],
                    ["COMPUTE_STRENGTH", "$LOC_GROUP.activeRedGroupId"],
                    ["COMPUTE_STRENGTH", "$LOC_GROUP.activeBlueGroupId"]
                ]
            },
            "cardEntersPlay": {
                "_comment": "Card enters play",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/inPlay"
                ],
                "condition": ["AND", "$TARGET.inPlay", ["PREV", ["NOT", "$TARGET.inPlay"]]],
                "then": [
                    ["COND",
                        ["EQUAL", "$GAME.AtSMode", false],
                            ["COND",
                                ["OR",
                                    ["EQUAL", "$TARGET.sides.A.type", "Army"],
                                    ["EQUAL", "$TARGET.sides.A.type", "Character"]
                                ],
                                ["COND",
                                    ["EQUAL", "$TARGET.groupId", ["JOIN_STRING", "$PLAYER_N", "Reserve"]],
                                    ["SET", "/cardById/$TARGET_ID/rotation", 90]
                                ]
                            ],
                        ["EQUAL", "$GAME.AtSMode", true],
                            ["COND",
                                ["OR",
                                    ["EQUAL", "$TARGET.sides.A.type", "Army"],
                                    ["EQUAL", "$TARGET.sides.A.type", "Character"]
                                ],
                                ["COND",
                                    ["OR",
                                        ["EQUAL", "$TARGET.groupId", ["JOIN_STRING", "player1", "Reserve"]],
                                        ["EQUAL", "$TARGET.groupId", ["JOIN_STRING", "player3", "Reserve"]],
                                        ["EQUAL", "$TARGET.groupId", ["JOIN_STRING", "player5", "Reserve"]]
                                    ],
                                    ["SET", "/cardById/$TARGET_ID/rotation", 90]
                                ]
                            ]
                    ],
                    ["COND",
                        ["OR",
                            ["EQUAL", "$TARGET.sides.A.type", "Item"],
                            ["EQUAL", "$TARGET.sides.A.type", "Character"]
                        ],
                        ["COND", 
                            ["EQUAL", "$TARGET.roundEnteredPlay", "$GAME.roundNumber"],
                            ["PROMPT", "$PLAYER_N", "cardEnteredPlayThisRound", "$TARGET.sides.A.name"],
                            ["TRUE"],
                            ["SET", "/cardById/$TARGET_ID/roundEnteredPlay", "$GAME.roundNumber"]
                        ]
                    ]
                ]
            },
            "LeaderEntersLocation": { 
                "_comment": "Leader enters location",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId"
                ],
                "condition": ["AND", 
                    ["IN_STRING", "$TARGET.groupId", "sharedActive"],
                    ["NOT_EQUAL", "$TARGET.groupId", ["PREV", "$TARGET.groupId"]],
                    ["IS_LEADER", "$TARGET"]
                ],
                "then": [
                    ["LOG", "A leader entered play"],
                    ["LEADER_ENTERED_GROUP", "$TARGET", "$TARGET.groupId"]
                ]
            },
            "armyEntersLocation": { 
                "_comment": "Army enters location",
                "type": "trigger", 
                "listenTo": [
                    "/cardById/*/groupId"
                ],
                "condition": ["AND", 
                    ["IN_STRING", "$TARGET.groupId", "sharedActive"],
                    ["NOT_EQUAL", "$TARGET.groupId", ["PREV", "$TARGET.groupId"]],
                    ["EQUAL", "$TARGET.sides.A.type", "Army"]
                ],
                "then": [
                    ["LOG", "An army entered play"],
                    ["ARMY_ENTERED_GROUP", "$TARGET", "$TARGET.groupId"]
                ]
            },
            "trackLocation": { 
                "_comment": "Track location",
                "type": "trigger", 
                "listenTo": ["/groupById/sharedActiveLocation1/stackIds", "/groupById/sharedActiveLocation2/stackIds", "/groupById/sharedActiveLocation3/stackIds", "/groupById/sharedActiveLocation4/stackIds", "/groupById/sharedActiveLocation5/stackIds", "/groupById/sharedActiveLocation6/stackIds"],
                "condition": ["TRUE"],
                "then": [
                    ["COND",
                        ["EQUAL", ["LENGTH", "$TARGET.stackIds"], 0],
                        [
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatStat", null],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatStat", null],
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatToken", null],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatToken", null]
                        ],
                        ["EQUAL", "$TARGET.parentCards.[0].sides.B.name", "Free Peoples Battleground"],
                        [
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatStat", "defense"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatStat", "attack"],
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatToken", "defenseBlue"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatToken", "attackRed"]
                        ],
                        ["EQUAL", "$TARGET.parentCards.[0].sides.B.name", "Shadow Battleground"],
                        [
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatStat", "attack"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatStat", "defense"],
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatToken", "attackBlue"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatToken", "defenseRed"]
                        ],
                        ["IN_STRING", "$TARGET.parentCards.[0].sides.A.type", "Path"],
                        [
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatStat", "buckler"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatStat", "skull"],
                            ["SET", "/groupById/$TARGET.activeBlueGroupId/combatToken", "pathBlue"],
                            ["SET", "/groupById/$TARGET.activeRedGroupId/combatToken", "pathRed"]
                        ]
                    ]
                ]
            }
        },
        "cards": {
            "a6cdd8d3-cd6e-4d1a-908b-2f788fbb357e": {
                "_comment": "Aragorn",
                "rules": {
                    "eliminateStrider": { 
                        "type": "trigger", 
                        "listenTo": ["/cardById/$THIS_ID/inPlay"],
                        "condition": ["AND", "$THIS.inPlay", ["PREV", ["NOT", "$THIS.inPlay"]]],
                        "then": [
                            ["PROMPT", "$PLAYER_N", "eliminateOnPlay", "Aragorn", "Strider"]
                        ]
                    }
                }
            },

            "ffa8235b-c293-44c0-b88e-7ebb5f909960": {
                "_comment": "Gandalf the White",
                "rules": {
                    "eliminateGandalfTheGrey": { 
                        "type": "trigger", 
                        "listenTo": ["/cardById/$THIS_ID/inPlay"],
                        "condition": ["AND", "$THIS.inPlay", ["PREV", ["NOT", "$THIS.inPlay"]]],
                        "then": [
                            ["PROMPT", "$PLAYER_N", "eliminateOnPlay", "Gandalf the White", "Gandalf the Grey"]
                        ]
                    }
                }
            },

            "b9539977-4ed1-44c6-aa09-5431a4a11967": {
                "_comment": "Gothmog",
                "rules": {
                    "eliminateWK": { 
                        "type": "trigger", 
                        "listenTo": ["/cardById/$THIS_ID/inPlay"],
                        "condition": ["AND", "$THIS.inPlay", ["PREV", ["NOT", "$THIS.inPlay"]]],
                        "then": [
                            ["PROMPT", "$PLAYER_N", "eliminateOnPlay", "Gothmog", "The Witch-king"]
                        ]
                    }
                }
            },
            "d2e8078c-c71c-4098-ae47-6d82ee9bc295": {
                "_comment": "Gothmog",
                "rules": {
                    "eliminateWK": { 
                        "type": "trigger", 
                        "listenTo": ["/cardById/$THIS_ID/inPlay"],
                        "condition": ["AND", "$THIS.inPlay", ["PREV", ["NOT", "$THIS.inPlay"]]],
                        "then": [
                            ["PROMPT", "$PLAYER_N", "eliminateOnPlay", "Gothmog", "The Witch-king"]
                        ]
                    }
                }
            },
            "1bf8e385-9b87-47a0-a536-f560cc0db14e": {
                "_comment": "Mirror of Galadriel",
                "ability": {
                    "A": [
                        ["LOG", "{{$ALIAS_N}} used {{$THIS.currentFace.name}} to look at the top card of their deck."],
                        ["VAR", "$TOP_CARD_ID", "$GAME.groupById.{{$THIS.controller}}Deck.parentCardIds.[0]"],
                        ["SET", "/cardById/$TOP_CARD_ID/peeking/{{$THIS.controller}}", true]
                    ]
                }
            },
            "178edd70-878d-4c1c-a64c-9eb913611450": {
                "_comment": "Minas Morgul",
                "ability": {
                    "A": [
                        ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById", [
                            ["COND",
                                ["EQUAL", "$CARD.sides.A.name", "The Witch-king"],
                                ["DEFINE", "$MORDOR_PLAYER_N", "$CARD.controller"]
                            ]
                        ]],
                        ["COND",
                            ["LESS_THAN", ["LENGTH", "$GAME.groupById.{{$MORDOR_PLAYER_N}}Deck.stackIds"], 5],
                            ["CYCLE_DECK", "$MORDOR_PLAYER_N"]
                        ],
                        ["LOG", "└── ", ["GET_ALIAS", "$MORDOR_PLAYER_N"], " is looking at the top 5 cards of their deck."],
                        ["LOOK_AT", "$MORDOR_PLAYER_N", "{{$MORDOR_PLAYER_N}}Deck", 5, true],
                        ["PROMPT", "$MORDOR_PLAYER_N", "playNumberedCardToReserve", "$MORDOR_PLAYER_N", "{{$MORDOR_PLAYER_N}}Deck"]
                    ]
                }
            },
            "0b834339-48da-4433-af10-20aaaf6433ce": {
                "_comment": "Nazgul's Mantle (coop)",
                "ability": {
                    "A": [
                        ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById", [
                            ["COND",
                                ["EQUAL", "$CARD.sides.A.name", "The Witch-king"],
                                ["DEFINE", "$MORDOR_PLAYER_N", "$CARD.controller"]
                            ]
                        ]],
                        ["VAR", "$NUMBER_OF_NAZGUL", 0],
                        ["FOR_EACH_VAL", "$CARD", "$GAME.groupById.{{$MORDOR_PLAYER_N}}Eliminated.parentCards", [
                            ["COND",
                                ["EQUAL", ["SUBSTRING", "$CARD.sides.A.text", 0, 6], "Nazgûl"],
                                ["INCREASE_VAR", "$NUMBER_OF_NAZGUL", 1]
                            ]
                        ]],
                        ["COND", 
                            ["EQUAL", "$NUMBER_OF_NAZGUL", 0],
                            ["ABORT", "└── ", ["GET_ALIAS", "$MORDOR_PLAYER_N"], " has no Nazgûl in their discard pile."]
                        ],
                        ["VAR", "$SELECTED_INDEX", ["RANDOM_INT", 0, ["SUBTRACT", "$NUMBER_OF_NAZGUL", 1]]],
                        ["FOR_EACH_VAL", "$CARD", "$GAME.groupById.{{$MORDOR_PLAYER_N}}Eliminated.parentCards", [
                            ["COND",
                                ["EQUAL", ["SUBSTRING", "$CARD.sides.A.text", 0, 6], "Nazgûl"],
                                [
                                    ["COND",
                                        ["EQUAL", "$SELECTED_INDEX", 0],
                                        [
                                            ["LOG", "└── ", ["GET_ALIAS", "$MORDOR_PLAYER_N"], " played a random Nazgûl ({{$CARD.sides.A.name}}) from their eliminated pile to their reserve."],
                                            ["MOVE_CARD", "$CARD.id", "{{$MORDOR_PLAYER_N}}Reserve", -1]
                                        ]
                                    ],
                                    ["DECREASE_VAR", "$SELECTED_INDEX", 1]
                                ]
                            ]
                        ]]
                    ]
                }
            }
        }
    }
}
